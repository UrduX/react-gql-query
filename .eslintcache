[{"D:\\GitHub\\react-gql-query\\src\\App.tsx":"1","D:\\GitHub\\react-gql-query\\src\\index.tsx":"2","D:\\GitHub\\react-gql-query\\src\\react-gql-query\\src\\index.ts":"3","D:\\GitHub\\react-gql-query\\src\\react-gql-query\\src\\hooks\\useGQLQuery.ts":"4","D:\\GitHub\\react-gql-query\\src\\react-gql-query\\src\\hooks\\useGQLQueryClient.ts":"5","D:\\GitHub\\react-gql-query\\src\\react-gql-query\\src\\hooks\\useGQLMutation.ts":"6","D:\\GitHub\\react-gql-query\\src\\react-gql-query\\src\\client\\GQLQueryClient.ts":"7","D:\\GitHub\\react-gql-query\\src\\react-gql-query\\src\\providers\\GQLQueryClientProvider.tsx":"8","D:\\GitHub\\react-gql-query\\src\\react-gql-query\\dist\\index.js":"9","D:\\GitHub\\react-gql-query\\src\\react-gql-query\\dist\\hooks\\useGQLQuery.js":"10","D:\\GitHub\\react-gql-query\\src\\react-gql-query\\dist\\providers\\GQLQueryClientProvider.js":"11","D:\\GitHub\\react-gql-query\\src\\react-gql-query\\dist\\client\\GQLQueryClient.js":"12","D:\\GitHub\\react-gql-query\\src\\react-gql-query\\dist\\hooks\\useGQLMutation.js":"13","D:\\GitHub\\react-gql-query\\src\\react-gql-query\\dist\\hooks\\useGQLQueryClient.js":"14"},{"size":2354,"mtime":1612187054383,"results":"15","hashOfConfig":"16"},{"size":728,"mtime":1612186950077,"results":"17","hashOfConfig":"16"},{"size":218,"mtime":1612184907805,"results":"18","hashOfConfig":"16"},{"size":728,"mtime":1612175635018,"results":"19","hashOfConfig":"16"},{"size":211,"mtime":1612174118224,"results":"20","hashOfConfig":"16"},{"size":847,"mtime":1612174113722,"results":"21","hashOfConfig":"16"},{"size":414,"mtime":1612184907804,"results":"22","hashOfConfig":"16"},{"size":615,"mtime":1612174104244,"results":"23","hashOfConfig":"16"},{"size":942,"mtime":1612186843365,"results":"24","hashOfConfig":"16"},{"size":639,"mtime":1612186843293,"results":"25","hashOfConfig":"16"},{"size":669,"mtime":1612186843273,"results":"26","hashOfConfig":"16"},{"size":408,"mtime":1612186843257,"results":"27","hashOfConfig":"16"},{"size":724,"mtime":1612186843321,"results":"28","hashOfConfig":"16"},{"size":448,"mtime":1612186843330,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"oq865c",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"D:\\GitHub\\react-gql-query\\src\\App.tsx",["61","62","63"],"import gql from \"graphql-tag\";\r\nimport { FC, useState } from \"react\";\r\nimport { useGQLMutation } from \"react-gql-query\";\r\n\r\nconst CREATE_POST_MUTATION = gql`\r\n  mutation($input: CreatePostInput!) {\r\n    createPost(input: $input) {\r\n      id\r\n      title\r\n      body\r\n    }\r\n  }\r\n`;\r\n\r\ninterface Post {\r\n  createPost: {\r\n    id: number;\r\n    title: string;\r\n    body: string;\r\n  };\r\n}\r\ninterface PostMutate {\r\n  input: {\r\n    title: string;\r\n    body: string;\r\n  };\r\n}\r\n\r\ninterface PostInput {\r\n  title: string;\r\n  body: string;\r\n}\r\n\r\nconst CreatePost: FC = () => {\r\n  const { data, mutate } = useGQLMutation<Post, any, PostMutate>(\r\n    {\r\n      mutation: CREATE_POST_MUTATION,\r\n    },\r\n    { onSuccess: () => console.log(\"post create is successful\") }\r\n  );\r\n  const [post, setPost] = useState<PostInput>({ title: \"\", body: \"\" });\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        onChange={({ target }) =>\r\n          setPost((initial) => {\r\n            return { ...initial, title: target.value };\r\n          })\r\n        }\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        onChange={({ target }) =>\r\n          setPost((initial) => {\r\n            return { ...initial, body: target.value };\r\n          })\r\n        }\r\n      />\r\n\r\n      <button onClick={() => mutate({ input: { ...post } })}>\r\n        Create Post\r\n      </button>\r\n      <div>{data?.createPost.title}</div>\r\n      <div>{data?.createPost.body}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface Data {\r\n  user: {\r\n    id: number;\r\n    username: string;\r\n    email: string;\r\n    adress: any;\r\n  };\r\n}\r\n\r\ninterface QueryVariables {\r\n  id: number;\r\n}\r\n\r\nconst GET_USER_QUERY = gql`\r\n  query($id: ID!) {\r\n    user(id: $id) {\r\n      id\r\n      username\r\n      email\r\n      address {\r\n        geo {\r\n          lat\r\n          lng\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nfunction App() {\r\n  // const { data, isLoading } = useGQLQuery<Data, any, QueryVariables>(\r\n  //   [\"user\", 1],\r\n  //   { query: GET_USER_QUERY, variables: { id: 1 } },\r\n  //   {\r\n  //     onSuccess: () => console.log(\"Fetch is successful!\"),\r\n  //   }\r\n  // );\r\n  // if (isLoading) return <div>Loading ...</div>;\r\n\r\n  return (\r\n    <div>\r\n      {/* <h1>{data?.user.id}</h1>\r\n      <h2>{data?.user.username}</h2>\r\n      <h3>{data?.user.email}</h3> */}\r\n      <CreatePost />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\GitHub\\react-gql-query\\src\\index.tsx",[],["64","65"],"D:\\GitHub\\react-gql-query\\src\\react-gql-query\\src\\index.ts",[],["66","67"],"D:\\GitHub\\react-gql-query\\src\\react-gql-query\\src\\hooks\\useGQLQuery.ts",[],"D:\\GitHub\\react-gql-query\\src\\react-gql-query\\src\\hooks\\useGQLQueryClient.ts",[],"D:\\GitHub\\react-gql-query\\src\\react-gql-query\\src\\hooks\\useGQLMutation.ts",[],"D:\\GitHub\\react-gql-query\\src\\react-gql-query\\src\\client\\GQLQueryClient.ts",[],"D:\\GitHub\\react-gql-query\\src\\react-gql-query\\src\\providers\\GQLQueryClientProvider.tsx",[],"D:\\GitHub\\react-gql-query\\src\\react-gql-query\\dist\\index.js",["68"],"D:\\GitHub\\react-gql-query\\src\\react-gql-query\\dist\\hooks\\useGQLQuery.js",["69"],"D:\\GitHub\\react-gql-query\\src\\react-gql-query\\dist\\providers\\GQLQueryClientProvider.js",["70"],"D:\\GitHub\\react-gql-query\\src\\react-gql-query\\dist\\client\\GQLQueryClient.js",["71"],"D:\\GitHub\\react-gql-query\\src\\react-gql-query\\dist\\hooks\\useGQLMutation.js",["72"],"D:\\GitHub\\react-gql-query\\src\\react-gql-query\\dist\\hooks\\useGQLQueryClient.js",["73"],{"ruleId":"74","severity":1,"message":"75","line":71,"column":11,"nodeType":"76","messageId":"77","endLine":71,"endColumn":15},{"ruleId":"74","severity":1,"message":"78","line":80,"column":11,"nodeType":"76","messageId":"77","endLine":80,"endColumn":25},{"ruleId":"74","severity":1,"message":"79","line":84,"column":7,"nodeType":"76","messageId":"77","endLine":84,"endColumn":21},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"80","replacedBy":"84"},{"ruleId":"82","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":1,"column":1,"nodeType":"88","messageId":"89","endLine":1,"endColumn":14,"fix":"90"},{"ruleId":"86","severity":1,"message":"87","line":1,"column":1,"nodeType":"88","messageId":"89","endLine":1,"endColumn":14,"fix":"91"},{"ruleId":"86","severity":1,"message":"87","line":1,"column":1,"nodeType":"88","messageId":"89","endLine":1,"endColumn":14,"fix":"92"},{"ruleId":"86","severity":1,"message":"87","line":1,"column":1,"nodeType":"88","messageId":"89","endLine":1,"endColumn":14,"fix":"93"},{"ruleId":"86","severity":1,"message":"87","line":1,"column":1,"nodeType":"88","messageId":"89","endLine":1,"endColumn":14,"fix":"94"},{"ruleId":"86","severity":1,"message":"87","line":1,"column":1,"nodeType":"88","messageId":"89","endLine":1,"endColumn":14,"fix":"95"},"@typescript-eslint/no-unused-vars","'Data' is defined but never used.","Identifier","unusedVar","'QueryVariables' is defined but never used.","'GET_USER_QUERY' is assigned a value but never used.","no-native-reassign",["96"],"no-negated-in-lhs",["97"],["96"],["97"],"strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"98","text":"99"},{"range":"100","text":"99"},{"range":"101","text":"99"},{"range":"102","text":"99"},{"range":"103","text":"99"},{"range":"104","text":"99"},"no-global-assign","no-unsafe-negation",[0,13],"",[0,13],[0,13],[0,13],[0,13],[0,13]]